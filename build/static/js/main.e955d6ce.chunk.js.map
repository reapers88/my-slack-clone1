{"version":3,"sources":["components/ChatInput.js","components/ChatMessage.js","firebase.js","components/Chat.js","components/Login.js","components/Header.js","data/SidebarData.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["ChatInput","sendMessage","useState","input","setInput","Container","InputContainer","onChange","e","target","value","type","placeholder","SendButton","onClick","preventDefault","Send","styled","div","button","SendOutlinedIcon","ChatMessage","text","name","image","timestamp","UserAvatar","src","MessageContent","Name","Date","toDate","toUTCString","Text","span","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","Chat","user","channelId","useParams","channel","setChannel","messages","setMessages","useEffect","collection","doc","onSnapshot","snapshot","data","orderBy","docs","map","Header","Channel","ChannelName","ChannelInfo","ChannelDetails","Info","MessageContainer","length","index","userImage","payload","Timestamp","now","photo","add","InfoOutlinedIcon","Login","props","Content","SlackImg","SignInButton","signInWithPopup","then","result","newUser","displayName","photoURL","localStorage","setItem","JSON","stringify","setUser","catch","error","alert","message","img","signOut","Main","SearchContainer","Search","UserContainer","UserImage","sidebarItemsData","icon","Sidebar","history","useHistory","WorkspaceContainer","NewMessage","MainChannels","item","MainChannelItem","ChannelsContainer","NewChannelContainer","promptName","prompt","ChannelsList","rooms","id","push","App","setRooms","parse","getItem","className","removeItem","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e955d6ce.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\r\n\r\nfunction ChatInput({ sendMessage }) {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const send = (e) => {\r\n    e.preventDefault();\r\n    if (!input) return;\r\n    sendMessage(input);\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <InputContainer>\r\n        <form>\r\n          <input\r\n            onChange={(e) => setInput(e.target.value)}\r\n            type=\"text\"\r\n            value={input}\r\n            placeholder=\"Message here....\"\r\n          />\r\n          <SendButton type=\"submit\" onClick={send}>\r\n            <Send />\r\n          </SendButton>\r\n        </form>\r\n      </InputContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ChatInput;\r\n\r\nconst Container = styled.div`\r\n  background: #ab9774;\r\n  display: flex;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  padding-bottom: 20px;\r\n  padding-top: 20px;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n    width: 100%;\r\n    border: 1px solid #690812\r\n    border-radius: 9px;\r\n    \r\n    form {\r\n        display: flex; \r\n        height: 42px;\r\n        \r\n        padding-left: 10px;\r\n        align-items: center;\r\n        input {\r\n            flex: 1;\r\n            border: none;\r\n            font-size: 14px;\r\n            font-weight: 700;\r\n            background-color: transparent;\r\n        }\r\n\r\n        input:focus {\r\n            outline: none;\r\n        }\r\n\r\n    }\r\n\r\n`;\r\n\r\nconst SendButton = styled.button`\r\n  background: #50a832;\r\n  border-radius: 4px;\r\n  width: 32px;\r\n  height: 32px;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-right: 5px;\r\n  cursor: pointer;\r\n\r\n  .MuiSvgIcon-root {\r\n    width: 18px;\r\n    padding-top: 3px;\r\n  }\r\n\r\n  :hover {\r\n    background: #89ab87;\r\n  }\r\n`;\r\n\r\nconst Send = styled(SendOutlinedIcon)`\r\n  color: white;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction ChatMessage({ text, name, image, timestamp }) {\r\n  return (\r\n    <Container>\r\n      <UserAvatar>\r\n        <img src={image} />\r\n      </UserAvatar>\r\n      <MessageContent>\r\n        <Name>\r\n          {name}\r\n          <span>{new Date(timestamp.toDate()).toUTCString()}</span>\r\n        </Name>\r\n        <Text>{text}</Text>\r\n      </MessageContent>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ChatMessage;\r\n\r\nconst Container = styled.div`\r\n  padding: 8px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    background: #89ab87;\r\n  }\r\n`;\r\n\r\nconst UserAvatar = styled.div`\r\n  width: 36px;\r\n  height: 36px;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n  margin-right: 8px;\r\n\r\n  img {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst MessageContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Name = styled.span`\r\n  font-weight: 900;\r\n  font-size: 15px;\r\n  line-height: 1.4;\r\n  span {\r\n    margin-left: 8px;\r\n    font-weight: 600;\r\n    color: rgb(97, 96, 97);\r\n    font-size: 13px;\r\n  }\r\n`;\r\n\r\nconst Text = styled.span``;\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA5Ux--SLmS4rXYENm8fDwACjGU0jaon10\",\r\n  authDomain: \"my-slack-clone-d9ea3.firebaseapp.com\",\r\n  projectId: \"my-slack-clone-d9ea3\",\r\n  storageBucket: \"my-slack-clone-d9ea3.appspot.com\",\r\n  messagingSenderId: \"744420269963\",\r\n  appId: \"1:744420269963:web:99c097539d90caad5f998e\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, provider };\r\nexport default db;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport ContactPhoneOutlinedIcon from \"@material-ui/icons/ContactPhoneOutlined\";\r\nimport ChatInput from \"./ChatInput\";\r\nimport ChatMessage from \"./ChatMessage\";\r\nimport db from \"../firebase\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction Chat({ user }) {\r\n  let { channelId } = useParams();\r\n  const [channel, setChannel] = useState();\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const getMessages = () => {\r\n    db.collection(\"rooms\")\r\n      .doc(channelId)\r\n      .collection(\"messages\")\r\n      .orderBy(\"timestamp\", \"asc\")\r\n      .onSnapshot((snapshot) => {\r\n        let messages = snapshot.docs.map((doc) => doc.data());\r\n        setMessages(messages);\r\n      });\r\n  };\r\n  const sendMessage = (text) => {\r\n    if (channelId) {\r\n      let payload = {\r\n        text: text,\r\n        timestamp: firebase.firestore.Timestamp.now(),\r\n        user: user.name,\r\n        userImage: user.photo,\r\n      };\r\n      db.collection(\"rooms\").doc(channelId).collection(\"messages\").add(payload);\r\n    }\r\n  };\r\n\r\n  const getChannel = () => {\r\n    db.collection(\"rooms\")\r\n      .doc(channelId)\r\n      .onSnapshot((snapshot) => {\r\n        setChannel(snapshot.data());\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getChannel();\r\n    getMessages();\r\n  }, [channelId]);\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <Channel>\r\n          <ChannelName># {channel && channel.name}</ChannelName>\r\n          <ChannelInfo>\r\n            <ContactPhoneOutlinedIcon /> Company wide announcements and other\r\n            matters.\r\n          </ChannelInfo>\r\n        </Channel>\r\n        <ChannelDetails>\r\n          <div>Details</div>\r\n          <Info />\r\n        </ChannelDetails>\r\n      </Header>\r\n      <MessageContainer>\r\n        {messages.length > 0 &&\r\n          messages.map((data, index) => (\r\n            <ChatMessage\r\n              text={data.text}\r\n              name={data.user}\r\n              image={data.userImage}\r\n              timestamp={data.timestamp}\r\n            />\r\n          ))}\r\n      </MessageContainer>\r\n      <ChatInput sendMessage={sendMessage} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 64px auto min-content;\r\n  min-height: 0;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  background: #f5eee1;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 2px solid rgba(83, 39, 83, 13);\r\n  justify-content: space-between;\r\n`;\r\nconst MessageContainer = styled.div`\r\n  background: #f7f6f2;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst Channel = styled.div``;\r\n\r\nconst ChannelDetails = styled.div`\r\n  background: #fffffff;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst ChannelName = styled.div`\r\n  font-weight: 700;\r\n`;\r\n\r\nconst ChannelInfo = styled.div`\r\n  font-weight: 400;\r\n  background: #fffffff;\r\n  font-size: 10px;\r\n  margin-top: 4px;\r\n`;\r\nconst Info = styled(InfoOutlinedIcon)`\r\n  margin-left: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { auth, provider } from \"../firebase\";\r\n\r\nfunction Login(props) {\r\n  const signIn = () => {\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        const newUser = {\r\n          name: result.user.displayName,\r\n          photo: result.user.photoURL,\r\n        };\r\n        localStorage.setItem(\"user\", JSON.stringify(newUser));\r\n        props.setUser(newUser);\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Content>\r\n        <SlackImg src=\"https://www.freeiconspng.com/thumbs/slack-icon/web-slack-icon-1.png\" />\r\n        <h1>Login</h1>\r\n        <SignInButton onClick={() => signIn()}>\r\n          Sign in with Google\r\n        </SignInButton>\r\n      </Content>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-color: #f8f8f9;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Content = styled.div`\r\n  background: white;\r\n  padding: 100px;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  box-shadow: 0 1px 4px rgb(0 0 0 / 20%), 0px 1px 2px rgb(0 0 0 / 30%);\r\n`;\r\nconst SlackImg = styled.img`\r\n  height: 100px;\r\n`;\r\n\r\nconst SignInButton = styled.button`\r\n  margin-top: 50px;\r\n  background-color: lightgreen;\r\n  border: none;\r\n  height: 40px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 15px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\r\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\r\n\r\nfunction Header({ user, signOut }) {\r\n  return (\r\n    <Container>\r\n      <Main>\r\n        <AccessTimeIcon />\r\n        <SearchContainer>\r\n          <Search>\r\n            <input type=\"text\" placeholder=\"Search.....\" />\r\n          </Search>\r\n        </SearchContainer>\r\n        <HelpOutlineIcon />\r\n      </Main>\r\n      <UserContainer>\r\n        <Name>{user.name}</Name>\r\n        <UserImage onClick={signOut}>\r\n          <img\r\n            src={user.photo ? user.photo : \"https://i.imgur.com/6VBx3io.png\"}\r\n          />\r\n        </UserImage>\r\n      </UserContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  background-color: #000000;\r\n  color: white;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n  z-index: 10px;\r\n  box-shadow: 0 1px 0 0 rgb(255 255 255 / 20%);\r\n`;\r\nconst Main = styled.div`\r\n  display: flex;\r\n  margin-left: 16px;\r\n  margin-right: 16px;\r\n`;\r\nconst SearchContainer = styled.div`\r\n  min-width: 350px;\r\n  margin-left: 16px;\r\n  margin-right: 16px;\r\n`;\r\n\r\nconst Search = styled.div`\r\n  width: 100%;\r\n  box-shadow: inset 0 0 0 1px rgb(191, 157, 19);\r\n  border-radius: 8px;\r\n\r\n  input {\r\n    background-color: transparent;\r\n    border: none;\r\n    padding-left: 8px;\r\n    padding-right: 8px;\r\n    color: white;\r\n    padding-top: 4px;\r\n    padding-bottom: 4px;\r\n  }\r\n\r\n  input:focus {\r\n    outline: none;\r\n  }\r\n`;\r\nconst UserContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  background: transparent;\r\n  padding-right: 15px;\r\n  position: absolute;\r\n  right: 0;\r\n`;\r\nconst Name = styled.div`\r\n  padding-right: 16px;\r\n`;\r\nconst UserImage = styled.div`\r\n  width: 28px;\r\n  height: 28px;\r\n  border: 1px solid gold;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n\r\n  img {\r\n    width: 100%;\r\n  }\r\n`;\r\n","import MessageIcon from \"@material-ui/icons/Message\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\n\r\nexport const sidebarItemsData = [\r\n  {\r\n    icon: <MessageIcon />,\r\n    text: \"Tell a Joke\",\r\n  },\r\n  {\r\n    icon: <InboxIcon />,\r\n    text: \"Call it\",\r\n  },\r\n  {\r\n    icon: <DraftsIcon />,\r\n    text: \"Reactions\",\r\n  },\r\n  {\r\n    icon: <BookmarkBorderIcon />,\r\n    text: \"Save Items\",\r\n  },\r\n  {\r\n    icon: <PeopleIcon />,\r\n    text: \"Peoples & Groups\",\r\n  },\r\n  {\r\n    icon: <AppsIcon />,\r\n    text: \"More\",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport { sidebarItemsData } from \"../data/SidebarData\";\r\nimport db from \"../firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Sidebar(props) {\r\n  const history = useHistory();\r\n\r\n  const goToChannel = (id) => {\r\n    if (id) {\r\n      history.push(`/room/${id}`);\r\n    }\r\n  };\r\n  const addChannel = () => {\r\n    const promptName = prompt(\"Enter channel name\");\r\n\r\n    if (promptName) {\r\n      db.collection(\"rooms\").add({ name: promptName });\r\n    }\r\n  };\r\n  return (\r\n    <Container>\r\n      <WorkspaceContainer>\r\n        <Name>\r\n          <h2>Slackers Can</h2>\r\n        </Name>\r\n        <NewMessage>\r\n          <PeopleIcon />\r\n        </NewMessage>\r\n      </WorkspaceContainer>\r\n      <MainChannels>\r\n        {sidebarItemsData.map((item) => (\r\n          <MainChannelItem>\r\n            {item.icon}\r\n            {item.text}\r\n          </MainChannelItem>\r\n        ))}\r\n      </MainChannels>\r\n      <ChannelsContainer>\r\n        <NewChannelContainer>\r\n          <div>Converse Rooms</div>\r\n          <AddCircleOutlineIcon onClick={addChannel} />\r\n        </NewChannelContainer>\r\n        <ChannelsList>\r\n          {props.rooms.map((item) => (\r\n            <Channel onClick={() => goToChannel(item.id)}>\r\n              # {item.name}\r\n            </Channel>\r\n          ))}\r\n        </ChannelsList>\r\n      </ChannelsContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n\r\nconst Container = styled.div`\r\n  background: #120f02;\r\n`;\r\nconst WorkspaceContainer = styled.div`\r\n  color: white;\r\n  height: 64px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding-left: 19px;\r\n  border-bottom: 1px solid #0335fc;\r\n`;\r\n\r\nconst Name = styled.div`\r\n  color: gold;\r\n`;\r\n\r\nconst NewMessage = styled.div`\r\n  width: 36px;\r\n  height: 36px;\r\n  background: white;\r\n  color: #3f0e40;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n  margin-right: 20px;\r\n  cursor: pointer;\r\n`;\r\nconst MainChannels = styled.div`\r\n  padding-top: 10px;\r\n`;\r\n\r\nconst MainChannelItem = styled.div`\r\n  color: rgb(188, 171, 188);\r\n  display: grid;\r\n  grid-template-columns: 25px auto;\r\n  height: 20px;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n  padding-left: 19px;\r\n  cursor: pointer;\r\n  :hover {\r\n    background: #350d15;\r\n  }\r\n`;\r\n\r\nconst ChannelsContainer = styled.div`\r\n  color: gold;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst NewChannelContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  coursor: pointer;\r\n  :hover {\r\n    background: #350d26;\r\n  }\r\n`;\r\n\r\nconst ChannelsList = styled.div`\r\n  color: silver;\r\n`;\r\n\r\nconst Channel = styled.div`\r\n  padding-left: 25px;\r\n  display: flex;\r\n\r\n  coursor: pointer;\r\n  :hover {\r\n    background: #350d88;\r\n  }\r\n`;\r\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Chat from \"./components/Chat\";\nimport Login from \"./components/Login\";\nimport styled from \"styled-components\";\nimport Header from \"./components/Header\";\nimport Sidebar from \"./components/Sidebar\";\nimport db from \"./firebase\";\nimport { auth, provider } from \"./firebase\";\n\nfunction App() {\n  const [rooms, setRooms] = useState([]);\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"user\")));\n\n  const getChannels = () => {\n    db.collection(\"rooms\").onSnapshot((snapshot) => {\n      setRooms(\n        snapshot.docs.map((doc) => {\n          return { id: doc.id, name: doc.data().name };\n        })\n      );\n    });\n  };\n\n  const signOut = () => {\n    auth.signOut().then(() => {\n      localStorage.removeItem(\"user\");\n      setUser(null);\n    });\n  };\n  useEffect(() => {\n    getChannels();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        {!user ? (\n          <Login setUser={setUser} />\n        ) : (\n          <Container>\n            <Header signOut={signOut} user={user} />\n            <Main>\n              <Sidebar rooms={rooms} />\n              <Switch>\n                <Route path=\"/room/:channelId\">\n                  <Chat user={user} />\n                </Route>\n                <Route path=\"/\">Select or Create Channel</Route>\n              </Switch>\n            </Main>\n          </Container>\n        )}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: grid;\n  grid-template-rows: 38px minmax(0, 1fr);\n`;\nconst Main = styled.div`\n  display: grid;\n  grid-template-columns: 260px auto;\n`;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}